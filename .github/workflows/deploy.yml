name: Github Action 도커 배포

# test
on:
  push:
    branches:
      - master

jobs:
  My-Deploy-Job:
    runs-on: ubuntu-latest

    steps:
      - name: Github Repository 파일 가져오기
        uses: actions/checkout@v4

      - name: JDK-17 버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application.yml 파일 만들기
        run: |
          mkdir -p ./src/main/resources
          echo "${{secrets.APPLICATION_PROPERTIES}}" > ./src/main/resources/application.yml

      - name: 빌드 권한 부여
        run: chmod +x ./gradlew

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build

      - name: AWS Resource에 접근 가능한 AWS credential 설정
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}

      - name: ECR에 로그인
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Docker 이미지 생성
        run: docker build -t chat/server .

      - name: Docker 이미지에 태그를 붙임
        run: docker tag chat/server ${{steps.login-ecr.outputs.registry}}/chat/server:latest

      - name: ECR에 도커 이미지 푸시
        run: docker push ${{steps.login-ecr.outputs.registry}}/chat/server:latest

      - name: SSH로 EC2 접속
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USERNAME}}
          key: ${{secrets.EC2_PRIVATE_KEY}}
          script_stop: true
          script: |
            mkdir -p builderDirectory
            cd builderDirectory
            docker compose down || true
            rm -f compose.yml || true
            echo "${{secrets.DOCKER_COMPOSE_CONTENT}}" > compose.yml
            docker image rm ${{steps.login-ecr.outputs.registry}}/chat/server:latest || true  
            docker-compose pull
            docker-compose up -d --build
